//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SkypeAway.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "11.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        /// <summary>
        /// Should something happen when the session is locked?
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Should something happen when the session is locked?")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ActivateOnLock {
            get {
                return ((bool)(this["ActivateOnLock"]));
            }
            set {
                this["ActivateOnLock"] = value;
            }
        }
        
        /// <summary>
        /// Should something happen when the session is unlocked?
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Should something happen when the session is unlocked?")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ActivateOnUnlock {
            get {
                return ((bool)(this["ActivateOnUnlock"]));
            }
            set {
                this["ActivateOnUnlock"] = value;
            }
        }
        
        /// <summary>
        /// Should something happen when a remote desktop session connects?
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Should something happen when a remote desktop session connects?")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ActivateOnRdDisconnect {
            get {
                return ((bool)(this["ActivateOnRdDisconnect"]));
            }
            set {
                this["ActivateOnRdDisconnect"] = value;
            }
        }
        
        /// <summary>
        /// Should something happen when a remote desktop session disconnects?
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Should something happen when a remote desktop session disconnects?")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ActivateOnRdConnect {
            get {
                return ((bool)(this["ActivateOnRdConnect"]));
            }
            set {
                this["ActivateOnRdConnect"] = value;
            }
        }
        
        /// <summary>
        /// Action to take on a lock or disconnect event.
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Action to take on a lock or disconnect event.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Away")]
        public global::SkypeAway.Status LockAction {
            get {
                return ((global::SkypeAway.Status)(this["LockAction"]));
            }
            set {
                this["LockAction"] = value;
            }
        }
        
        /// <summary>
        /// Action to take on an unlock or connect event.
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Action to take on an unlock or connect event.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Online")]
        public global::SkypeAway.Status UnlockAction {
            get {
                return ((global::SkypeAway.Status)(this["UnlockAction"]));
            }
            set {
                this["UnlockAction"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Away")]
        public global::SkypeAway.Status RdDisconnectAction {
            get {
                return ((global::SkypeAway.Status)(this["RdDisconnectAction"]));
            }
            set {
                this["RdDisconnectAction"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Online")]
        public global::SkypeAway.Status RdConnectAction {
            get {
                return ((global::SkypeAway.Status)(this["RdConnectAction"]));
            }
            set {
                this["RdConnectAction"] = value;
            }
        }
    }
}
